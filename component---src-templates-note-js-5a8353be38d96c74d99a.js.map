{"version":3,"file":"component---src-templates-note-js-5a8353be38d96c74d99a.js","mappings":"8LA6EA,UAvEaA,IAAsB,IAArB,YAAEC,GAAaD,EACzB,MAAME,EAAQC,EAAAA,GAAAA,GACR,KAAEC,EAAO,EAAC,MAAEC,EAAQH,EAAMI,QAAWL,GAAe,CAAC,EAErDM,EAAWJ,EAAAA,GAAAA,EAAAA,GAAAA,EAEXK,GAAYC,EAAAA,EAAAA,GAAI,IAAIC,IACtBR,EAAMS,QAAQC,IAAA,IAAAC,EAAAC,EAAA,IAAC,KAAEC,GAAMH,EAAA,OAAwB,QAAnBC,EAAAE,EAAKC,sBAAc,IAAAH,GAAM,QAANC,EAAnBD,EAAqBI,YAAI,IAAAH,OAAN,EAAnBA,EAA2BI,MAAM,OAAQ,OACtEC,OAAOC,UAEJ,EAACC,EAAa,EAACC,IAAmBC,EAAAA,EAAAA,UAAS,OAE3CC,EAAgBtB,EAAMiB,OAAOM,IAAA,IAAC,KAAEV,GAAMU,EAAA,OAClB,IAAtBV,EAAKW,eACa,QAAjBL,GAA0BN,EAAKC,eAAeC,KAAKU,SAASN,MAG3DO,EAA6B,QAAjBP,EACZG,EAAcK,MAAMzB,EAAMA,EAAOC,GACjCmB,EAEN,OACIM,EAAAA,cAACC,EAAAA,GAAM,KACCD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,4BAA4BC,YAAY,+DACvDJ,EAAAA,cAAA,OAAKK,UAAU,aACXL,EAAAA,cAAA,UAAQK,UAAU,eACdL,EAAAA,cAAA,OAAKK,UAAU,uBACXL,EAAAA,cAAA,UAAKvB,EAASU,QAGtBa,EAAAA,cAAA,OAAKK,UAAU,oBACXL,EAAAA,cAAA,UACIM,GAAG,cACHC,MAAOhB,EACPiB,SAAWC,GAAMjB,EAAgBiB,EAAEC,OAAOH,OAC1CF,UAAU,iBAEVL,EAAAA,cAAA,UAAQO,MAAM,OAAM,6BACnB7B,EAAUiC,IAAKC,GACZZ,EAAAA,cAAA,UAAQa,IAAKD,EAAML,MAAOK,GACrBA,MAMjBZ,EAAAA,cAAA,WAASK,UAAU,aACdP,EAAUtB,OAAS,EAChBsB,EAAUa,IAAIG,IAAA,IAAC,KAAE7B,GAAM6B,EAAA,OACnBd,EAAAA,cAACe,EAAAA,GAAQ,CAACF,IAAK5B,EAAKqB,GAAIU,KAAM/B,MAGlCe,EAAAA,cAAA,SAAG,6CAIO,QAAjBT,GACGS,EAAAA,cAACiB,EAAAA,GAAU,CAAC9C,YAAaA,M","sources":["webpack://czhuang-blog-develop/./src/templates/note.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Seo } from \"../components/SEO\";\nimport { Layout, PostCard, Pagination } from \"../components\";\nimport data from \"../data/blog.json\";\n\nconst Note = ({ pageContext }) => {\n    const posts = data.allPosts.edges;\n    const { skip = 0, limit = posts.length } = pageContext || {};\n\n    const noteData = data.czNoteInfo.edges[0].node;\n\n    const techTypes = [...new Set(\n        posts.flatMap(({ node }) => node.note_tech_type?.name?.split(\" \") || [])\n    )].filter(Boolean);\n\n    const [selectedTech, setSelectedTech] = useState(\"all\");\n\n    const filteredPosts = posts.filter(({ node }) =>\n        node.note_visible === true &&\n        (selectedTech === \"all\" || node.note_tech_type.name.includes(selectedTech))\n    );\n\n    const pagePosts = selectedTech === \"all\"\n        ? filteredPosts.slice(skip, skip + limit)\n        : filteredPosts;\n\n    return (\n        <Layout>\n                <Seo title=\"Tech Note | CZ-HUANG Blog\" description=\"CZ-Huang Blog Technical Notes Categories and Content Index\" />\n            <div className=\"container\">\n                <header className=\"page-header\">\n                    <div className=\"page-header-content\">\n                        <h1>{noteData.name}</h1>\n                    </div>\n                </header>\n                <div className=\"filter-container\">\n                    <select\n                        id=\"tech-select\"\n                        value={selectedTech}\n                        onChange={(e) => setSelectedTech(e.target.value)}\n                        className=\"filter-select\"\n                    >\n                        <option value=\"all\">Choose your tech interest</option>\n                        {techTypes.map((tech) => (\n                            <option key={tech} value={tech}>\n                                {tech}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <section className=\"post-feed\">\n                    {pagePosts.length > 0 ? (\n                        pagePosts.map(({ node }) => (\n                            <PostCard key={node.id} post={node} />\n                        ))\n                    ) : (\n                        <p>No posts available under this tech type.</p>\n                    )}\n                </section>\n\n                {selectedTech === \"all\" && (\n                    <Pagination pageContext={pageContext} />\n                )}\n            </div>\n        </Layout>\n    );\n};\n\nNote.propTypes = {\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n};\n\nexport default Note;\n"],"names":["_ref","pageContext","posts","data","skip","limit","length","noteData","techTypes","_toConsumableArray","Set","flatMap","_ref2","_node$note_tech_type","_node$note_tech_type$","node","note_tech_type","name","split","filter","Boolean","selectedTech","setSelectedTech","useState","filteredPosts","_ref3","note_visible","includes","pagePosts","slice","React","Layout","Seo","title","description","className","id","value","onChange","e","target","map","tech","key","_ref4","PostCard","post","Pagination"],"sourceRoot":""}