{"version":3,"file":"component---src-templates-portfolio-js-9156e16e86448d5597b8.js","mappings":"8LAuEA,UAjEkBA,IAAsB,IAArB,YAAEC,GAAaD,EAC9B,MAAME,EAAQC,EAAAA,GAAAA,GACR,KAAEC,EAAO,EAAC,MAAEC,EAAQH,EAAMI,QAAWL,GAAe,CAAC,EAErDM,EAAgBJ,EAAAA,GAAAA,EAAAA,GAAAA,EAEhBK,GAAYC,EAAAA,EAAAA,GAAI,IAAIC,IAAIR,EAAMS,QAAQC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAKC,EAAKC,oBAAoBC,KAAKC,MAAM,SAAQC,OAAOC,UACtGC,EAAcC,GAAmBC,EAAAA,SAAe,OAEjDC,EAAgBpB,EAAMe,OAAOM,IAAA,IAAC,KAAEV,GAAMU,EAAA,OACb,IAA3BV,EAAKW,oBACa,QAAjBL,GAA0BN,EAAKC,oBAAoBC,KAAKU,SAASN,MAGhEO,EAA6B,QAAjBP,EACZG,EAAcK,MAAMvB,EAAMA,EAAOC,GACjCiB,EAEN,OACID,EAAAA,cAACO,EAAAA,GAAM,KACHP,EAAAA,cAACQ,EAAAA,EAAG,CAACC,MAAM,4BAA4BC,YAAY,yDACnDV,EAAAA,cAAA,OAAKW,UAAU,aACXX,EAAAA,cAAA,UAAQW,UAAU,eACdX,EAAAA,cAAA,OAAKW,UAAU,uBACXX,EAAAA,cAAA,UAAKd,EAAcQ,QAG3BM,EAAAA,cAAA,OAAKW,UAAU,oBACXX,EAAAA,cAAA,UACIY,GAAG,cACHC,MAAOf,EACPgB,SAAWC,GAAMhB,EAAgBgB,EAAEC,OAAOH,OAC1CF,UAAU,iBAEVX,EAAAA,cAAA,UAAQa,MAAM,OAAM,+BACnB1B,EAAU8B,IAAKC,GACZlB,EAAAA,cAAA,UAAQmB,IAAKD,EAAML,MAAOK,GACrBA,MAKjBlB,EAAAA,cAAA,WAASW,UAAU,aACdN,EAAUpB,OAAS,EAChBoB,EAAUY,IAAIG,IAAA,IAAC,KAAE5B,GAAM4B,EAAA,OAAKpB,EAAAA,cAACqB,EAAAA,GAAQ,CAACF,IAAK3B,EAAKoB,GAAIU,KAAM9B,MAE1DQ,EAAAA,cAAA,SAAG,6CAIO,QAAjBF,GACGE,EAAAA,cAACuB,EAAAA,GAAU,CAAC3C,YAAaA,M","sources":["webpack://czhuang-blog-develop/./src/templates/portfolio.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Seo } from \"../components/SEO\";\nimport { Layout, PostCard, Pagination } from \"../components\";\nimport data from \"../data/blog.json\";\n\nconst Portfolio = ({ pageContext }) => {\n    const posts = data.allPosts.edges;\n    const { skip = 0, limit = posts.length } = pageContext || {};\n\n    const portfolioData = data.czPortfolioInfo.edges[0].node;\n    \n    const techTypes = [...new Set(posts.flatMap(({ node }) => node.portfolio_tech_type.name.split(\" \")))].filter(Boolean);\n    const [selectedTech, setSelectedTech] = React.useState(\"all\");\n\n    const filteredPosts = posts.filter(({ node }) =>\n        node.portfolio_visible === true &&\n        (selectedTech === \"all\" || node.portfolio_tech_type.name.includes(selectedTech))\n    );\n\n    const pagePosts = selectedTech === \"all\"\n        ? filteredPosts.slice(skip, skip + limit)\n        : filteredPosts;\n\n    return (\n        <Layout>\n            <Seo title=\"Portfolio | CZ-HUANG Blog\" description=\"CZ-Huang Blog Portfolio categories and content index\" />\n            <div className=\"container\">\n                <header className=\"page-header\">\n                    <div className=\"page-header-content\">\n                        <h1>{portfolioData.name}</h1>\n                    </div>\n                </header>\n                <div className=\"filter-container\">\n                    <select\n                        id=\"tech-select\"\n                        value={selectedTech}\n                        onChange={(e) => setSelectedTech(e.target.value)}\n                        className=\"filter-select\"\n                    >\n                        <option value=\"all\"> Choose your tech interest </option>\n                        {techTypes.map((tech) => (\n                            <option key={tech} value={tech}>\n                                {tech}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <section className=\"post-feed\">\n                    {pagePosts.length > 0 ? (\n                        pagePosts.map(({ node }) => <PostCard key={node.id} post={node} />)\n                    ) : (\n                        <p>No posts available under this tech type.</p>\n                    )}\n                </section>\n\n                {selectedTech === \"all\" && (\n                    <Pagination pageContext={pageContext} />\n                )}\n            </div>\n        </Layout>\n    );\n};\n\nPortfolio.propTypes = {\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n};\n\nexport default Portfolio;\n"],"names":["_ref","pageContext","posts","data","skip","limit","length","portfolioData","techTypes","_toConsumableArray","Set","flatMap","_ref2","node","portfolio_tech_type","name","split","filter","Boolean","selectedTech","setSelectedTech","React","filteredPosts","_ref3","portfolio_visible","includes","pagePosts","slice","Layout","Seo","title","description","className","id","value","onChange","e","target","map","tech","key","_ref4","PostCard","post","Pagination"],"sourceRoot":""}